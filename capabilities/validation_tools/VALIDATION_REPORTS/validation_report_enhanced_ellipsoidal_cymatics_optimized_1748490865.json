{
  "item_path": "../00-INTAKE/enhanced_ellipsoidal_cymatics_optimized.html",
  "final_status": "REJECTED",
  "processing_time_seconds": 0.0028150081634521484,
  "timestamp": "2025-05-29T03:54:25.619474",
  "stages_completed": [
    "00-INTAKE"
  ],
  "validation_results": {
    "00-INTAKE": {
      "passed": true,
      "content_length": 29167,
      "claims_count": 0,
      "equations_count": 243,
      "hypotheses_count": 0,
      "claims": [],
      "equations": [
        "lang=\"en\">",
        "charset=\"UTF-8\">",
        "name=\"viewport\" content=\"width=device-width, initial-scale=1",
        "type=\"range\"] {",
        "type=\"range\"]:hover {",
        "type=\"range\"]::-webkit-slider-thumb {",
        "id=\"container\">",
        "id=\"controls\">",
        "style=\"margin-top: 0; color: #00ffff; text-align: center;\">Enhanced Ellipsoidal Harmonics</h3>",
        "class=\"control-group\">",
        "for=\"harmonic-degree\">Harmonic Degree (l)</label>",
        "type=\"range\" id=\"harmonic-degree\" min=\"0\" max=\"25\" value=\"4\" step=\"1\">",
        "class=\"value-display\" id=\"harmonic-degree-value\">4</div>",
        "class=\"control-group\">",
        "for=\"harmonic-order\">Harmonic Order (m)</label>",
        "type=\"range\" id=\"harmonic-order\" min=\"-25\" max=\"25\" value=\"3\" step=\"1\">",
        "class=\"value-display\" id=\"harmonic-order-value\">3</div>",
        "class=\"control-group\">",
        "for=\"ellipticity-a\">Semi-axis A</label>",
        "type=\"range\" id=\"ellipticity-a\" min=\"0",
        "max=\"4",
        "value=\"1",
        "step=\"0",
        "class=\"value-display\" id=\"ellipticity-a-value\">1",
        "class=\"control-group\">",
        "for=\"ellipticity-b\">Semi-axis B</label>",
        "type=\"range\" id=\"ellipticity-b\" min=\"0",
        "max=\"4",
        "value=\"1",
        "step=\"0",
        "class=\"value-display\" id=\"ellipticity-b-value\">1",
        "class=\"control-group\">",
        "for=\"ellipticity-c\">Semi-axis C</label>",
        "type=\"range\" id=\"ellipticity-c\" min=\"0",
        "max=\"4",
        "value=\"0",
        "step=\"0",
        "class=\"value-display\" id=\"ellipticity-c-value\">0",
        "class=\"control-group\">",
        "for=\"wave-speed\">Wave Propagation Speed</label>",
        "type=\"range\" id=\"wave-speed\" min=\"0",
        "max=\"3",
        "value=\"1",
        "step=\"0",
        "class=\"value-display\" id=\"wave-speed-value\">1",
        "class=\"control-group\">",
        "for=\"amplitude\">Amplitude</label>",
        "type=\"range\" id=\"amplitude\" min=\"0",
        "max=\"15",
        "value=\"3",
        "step=\"0",
        "class=\"value-display\" id=\"amplitude-value\">3",
        "class=\"control-group\">",
        "for=\"radial-decay\">Radial Decay</label>",
        "type=\"range\" id=\"radial-decay\" min=\"0",
        "max=\"8",
        "value=\"2",
        "step=\"0",
        "class=\"value-display\" id=\"radial-decay-value\">2",
        "class=\"control-group\">",
        "for=\"particle-count\">Particle Count</label>",
        "id=\"particle-count\">",
        "value=\"50000\">50K (Fast)</option>",
        "value=\"150000\">150K (Balanced)</option>",
        "value=\"500000\" selected>500K (High Quality)</option>",
        "value=\"1000000\">1M (Ultra)</option>",
        "value=\"2000000\">2M (Extreme)</option>",
        "class=\"control-group\">",
        "for=\"computation-mode\">Computation Mode</label>",
        "id=\"computation-mode\">",
        "value=\"optimized\" selected>Optimized CPU</option>",
        "value=\"gpu-accelerated\">GPU Accelerated</option>",
        "value=\"hybrid\">Hybrid Processing</option>",
        "class=\"control-group\">",
        "onclick=\"toggleAnimation()\">Toggle Animation</button>",
        "onclick=\"resetSystem()\">Reset System</button>",
        "onclick=\"exportConfiguration()\">Export Config</button>",
        "id=\"info\">",
        "class=\"math-display\">Enhanced Ellipsoidal Spherical Harmonics</div>",
        "class=\"math-display\">\u2207\u00b2\u03c8 + k\u00b2\u03c8 = 0 in ellipsoidal coordinates</div>",
        "id=\"realtime-particles\">0</span> particles</div>",
        "id=\"performance\">",
        "id=\"fps\">60</span></div>",
        "id=\"particle-display\">500K</span></div>",
        "id=\"gpu-util\">45%</span></div>",
        "id=\"memory-usage\">2",
        "id=\"compute-time\">0",
        "src=\"https://cdnjs",
        "RATIO = (1 + Math",
        "GAMMA = 0",
        "PI = Math",
        "PI = 2 * Math",
        "PI = 4 * Math",
        "CACHE = new Map();",
        "CACHE = new Map();",
        "CACHE = new Map();",
        "CACHE = new Map();",
        "SIZE = 10000;",
        "SIZE = 32;",
        "SIZE = 8;",
        "isAnimating = true;",
        "frameCount = 0;",
        "lastTime = performance",
        "fps = 60;",
        "n = 0; n <= maxN; n++) {",
        "result = 1;",
        "i = 2; i <= n; i++) {",
        "result = 1;",
        "i = n; i > 0; i -= 2) {",
        "key = `${l}_${m}_${x",
        "absM = Math",
        "l === 0 && absM === 0) {",
        "result = 1;",
        "l === absM) {",
        "sign = (l % 2 === 0) ",
        "doubleFactorialValue = doubleFactorial(2 * l - 1);",
        "result = sign * doubleFactorialValue * Math",
        "l === absM + 1) {",
        "prevValue = associatedLegendrePolynomial(l - 1, absM, x);",
        "result = x * (2 * l - 1) * prevValue;",
        "m = (2l-1)xP_{l-1}^m - (l+m-1)P_{l-2}^m",
        "result = ((2 * l - 1) * x * p1 - (l + absM - 1) * p2) / (l - absM);",
        "sign = (absM % 2 === 0) ",
        "factorRatio = FACTORIAL_CACHE",
        "key = `${l}_${m}_${theta",
        "cosTheta = Math",
        "legendre = associatedLegendrePolynomial(l, m, cosTheta);",
        "normalization = Math",
        "m === 0) {",
        "result = normalization * legendre;",
        "result = normalization * legendre * Math",
        "result = normalization * legendre * Math",
        "xNorm = x / a;",
        "yNorm = y / b;",
        "zNorm = z / c;",
        "r = Math",
        "theta = Math",
        "phi = Math",
        "key = `${x",
        "harmonicValue = sphericalHarmonic(l, m, theta, phi);",
        "ellipsoidalCorrection = Math",
        "radialFunction = Math",
        "wavePhase = timePhase + r * 0",
        "timeEvolution = Math",
        "result = amplitude * harmonicValue * radialFunction * timeEvolution * ellipsoidalCorrection;",
        "h = 0",
        "potential = ellipsoidalHarmonicPotential(x, y, z, l, m, amplitude, timePhase, a, b, c, radialDecay);",
        "gradX = (ellipsoidalHarmonicPotential(x + h, y, z, l, m, amplitude, timePhase, a, b, c, radialDecay) -",
        "gradY = (ellipsoidalHarmonicPotential(x, y + h, z, l, m, amplitude, timePhase, a, b, c, radialDecay) -",
        "gradZ = (ellipsoidalHarmonicPotential(x, y, z + h, l, m, amplitude, timePhase, a, b, c, radialDecay) -",
        "scene = new THREE",
        "camera = new THREE",
        "renderer = new THREE",
        "particleCount = parseInt(document",
        "geometry = new THREE",
        "positions = new Float32Array(particleCount * 3);",
        "velocities = new Float32Array(particleCount * 3);",
        "colors = new Float32Array(particleCount * 3);",
        "i = 0; i < particleCount; i++) {",
        "idx = i * 3;",
        "u = Math",
        "v = Math",
        "r = 15 + Math",
        "a = parseFloat(document",
        "b = parseFloat(document",
        "c = parseFloat(document",
        "material = new THREE",
        "particleSystem = new THREE",
        "time = Date",
        "l = parseInt(document",
        "m = parseInt(document",
        "amplitude = parseFloat(document",
        "waveSpeed = parseFloat(document",
        "a = parseFloat(document",
        "b = parseFloat(document",
        "c = parseFloat(document",
        "radialDecay = parseFloat(document",
        "timePhase = time * waveSpeed;",
        "particleCount = positions",
        "startTime = performance",
        "i = 0; i < particleCount; i++) {",
        "idx = i * 3;",
        "x = positions[idx];",
        "y = positions[idx + 1];",
        "z = positions[idx + 2];",
        "force = computeEllipsoidalGradient(x, y, z, l, m, amplitude, timePhase, a, b, c, radialDecay);",
        "damping = 0",
        "forceScale = 0",
        "r = Math",
        "scale = 50 / r;",
        "potential = ellipsoidalHarmonicPotential(x, y, z, l, m, amplitude, timePhase, a, b, c, radialDecay);",
        "normalizedPotential = Math",
        "gradientMagnitude = Math",
        "needsUpdate = true;",
        "needsUpdate = true;",
        "endTime = performance",
        "textContent = (endTime - startTime)",
        "particleCount = parseInt(document",
        "textContent = particleCount",
        "controls = ['harmonic-degree', 'harmonic-order', 'ellipticity-a', 'ellipticity-b', ",
        "id => {",
        "element = document",
        "textContent = element",
        "aspect = window",
        "isAnimating = ",
        "value = 4;",
        "value = 3;",
        "value = 1",
        "value = 1",
        "value = 0",
        "value = 1",
        "value = 3",
        "value = 2",
        "config = {",
        "blob = new Blob([JSON",
        "url = URL",
        "a = document",
        "href = url;",
        "download = 'ellipsoidal_cymatics_config",
        "animationId = requestAnimationFrame(animate);",
        "time = Date",
        "x = Math",
        "z = Math",
        "y = Math",
        "currentTime = performance",
        "fps = Math",
        "textContent = fps;",
        "frameCount = 0;",
        "lastTime = currentTime;",
        "particleCount = parseInt(document",
        "textContent = particleCount",
        "l = parseInt(document",
        "baseUtil = Math",
        "textContent = Math",
        "memoryGB = (particleCount * 48 + 200) / 1024 / 1024 / 1024;",
        "textContent = memoryGB",
        "E = new Map();",
        "E = new Map();",
        "E = new Map();",
        "E = new Map();",
        "E = 10000;",
        "E = 32;",
        "E = 8;"
      ],
      "hypotheses": []
    }
  },
  "rejection_stage": "01-INITIAL_SCREENING",
  "rejection_reason": "Initial screening pass rate 0.50 below 0.8 threshold",
  "destination": "09-REJECTED_ITEMS"
}