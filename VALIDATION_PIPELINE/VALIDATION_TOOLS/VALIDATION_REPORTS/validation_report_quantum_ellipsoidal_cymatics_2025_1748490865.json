{
  "item_path": "../00-INTAKE/quantum_ellipsoidal_cymatics_2025.html",
  "final_status": "REJECTED",
  "processing_time_seconds": 0.003422975540161133,
  "timestamp": "2025-05-29T03:54:25.545769",
  "stages_completed": [
    "00-INTAKE"
  ],
  "validation_results": {
    "00-INTAKE": {
      "passed": true,
      "content_length": 39714,
      "claims_count": 0,
      "equations_count": 210,
      "hypotheses_count": 0,
      "claims": [],
      "equations": [
        "lang=\"en\">",
        "charset=\"UTF-8\">",
        "name=\"viewport\" content=\"width=device-width, initial-scale=1",
        "type=\"range\"] {",
        "type=\"range\"]::-webkit-slider-thumb {",
        "id=\"canvas\"></canvas>",
        "class=\"title\">",
        "class=\"quantum-indicator\">",
        "style=\"font-size: 12px; font-weight: bold;\">\u03a8</div>",
        "class=\"controls\">",
        "class=\"control-group\">",
        "type=\"range\" id=\"frequency\" min=\"0",
        "max=\"10\" step=\"0",
        "value=\"2",
        "class=\"value-display\" id=\"frequencyValue\">2",
        "class=\"control-group\">",
        "type=\"range\" id=\"ellipsoidA\" min=\"0",
        "max=\"3\" step=\"0",
        "value=\"1",
        "class=\"value-display\" id=\"ellipsoidAValue\">1",
        "class=\"control-group\">",
        "type=\"range\" id=\"ellipsoidB\" min=\"0",
        "max=\"3\" step=\"0",
        "value=\"1",
        "class=\"value-display\" id=\"ellipsoidBValue\">1",
        "class=\"control-group\">",
        "type=\"range\" id=\"ellipsoidC\" min=\"0",
        "max=\"3\" step=\"0",
        "value=\"1",
        "class=\"value-display\" id=\"ellipsoidCValue\">1",
        "class=\"control-group\">",
        "type=\"range\" id=\"coherence\" min=\"0\" max=\"1\" step=\"0",
        "value=\"0",
        "class=\"value-display\" id=\"coherenceValue\">0",
        "class=\"control-group\">",
        "type=\"range\" id=\"interference\" min=\"0\" max=\"2\" step=\"0",
        "value=\"1",
        "class=\"value-display\" id=\"interferenceValue\">1",
        "class=\"control-group\">",
        "type=\"range\" id=\"particleDensity\" min=\"1000\" max=\"50000\" step=\"1000\" value=\"15000\">",
        "class=\"value-display\" id=\"particleDensityValue\">15000</div>",
        "class=\"control-group\">",
        "type=\"range\" id=\"cosmicScale\" min=\"0",
        "max=\"5\" step=\"0",
        "value=\"1",
        "class=\"value-display\" id=\"cosmicScaleValue\">1",
        "class=\"performance-monitor\">",
        "id=\"fps\">60</span></div>",
        "id=\"particleCount\">15000</span></div>",
        "id=\"gpuMemory\">0</span>MB</div>",
        "id=\"quantumStates\">0</span></div>",
        "class=\"info-panel\">",
        "canvas = document",
        "gl = canvas",
        "width = window",
        "height = window",
        "time = 0;",
        "particles = [];",
        "quantumStates = [];",
        "ellipsoidParams = { a: 1",
        "frequency = 2",
        "coherence = 0",
        "interference = 1",
        "cosmicScale = 1",
        "particleCount = 15000;",
        "camera = {",
        "performance = {",
        "vertexShaderSource = `#version 300 es",
        "theta = atan(pos",
        "phi = acos(pos",
        "a = params",
        "b = params",
        "c = params",
        "ellipsoidFactor = sqrt((pos",
        "lm = 0",
        "l == 0) {",
        "lm = 0",
        "l == 1) {",
        "m == -1) Y_lm = 0",
        "m == 0) Y_lm = 0",
        "m == 1) Y_lm = 0",
        "l == 2) {",
        "m == -2) Y_lm = 0",
        "m == -1) Y_lm = 0",
        "m == 0) Y_lm = 0",
        "m == 1) Y_lm = 0",
        "m == 2) Y_lm = 0",
        "psi = vec2(0",
        "l = 0; l <= 2; l++) {",
        "m = -l; m <= l; m++) {",
        "lm = float(l * l + l + 1); // Energy eigenvalue",
        "lm = ellipsoidalHarmonic(pos, ellipsoidParams, l, m);",
        "t = -E_lm * t * frequency;",
        "state = vec2(cos(phase_t), sin(phase_t)) * Y_lm;",
        "pos = position * cosmicScale;",
        "total = psi1 + psi2 * interference;",
        "probability = dot(psi_total, psi_total);",
        "a = ellipsoidParams",
        "b = ellipsoidParams",
        "c = ellipsoidParams",
        "ellipsoidDisplacement = vec3(",
        "finalPosition = pos + ellipsoidDisplacement * amplitude;",
        "cosmicGrowth = 1",
        "vPosition = finalPosition;",
        "vIntensity = probability;",
        "hue = mod(probability * 6",
        "vColor = mix(vec3(1,0,1), vec3(0,0,1), hue);",
        "vColor = mix(vec3(0,0,1), vec3(0,1,1), hue-1",
        "vColor = mix(vec3(0,1,1), vec3(0,1,0), hue-2",
        "vColor = mix(vec3(0,1,0), vec3(1,1,0), hue-3",
        "vColor = mix(vec3(1,1,0), vec3(1,0,0), hue-4",
        "vColor = mix(vec3(1,0,0), vec3(1,0,1), hue-5",
        "Position = projectionMatrix * viewMatrix * vec4(finalPosition, 1",
        "PointSize = 2",
        "fragmentShaderSource = `#version 300 es",
        "coord = gl_PointCoord - vec2(0",
        "dist = length(coord);",
        "alpha = (1",
        "alpha = pow(alpha, 0",
        "interference = sin(vIntensity * 20",
        "fragColor = vec4(vColor * interference, alpha);",
        "shaderProgram = this",
        "uniforms = this",
        "vertexShader = this",
        "fragmentShader = this",
        "program = gl",
        "shader = gl",
        "vao = gl",
        "positionBuffer = gl",
        "velocityBuffer = gl",
        "phaseBuffer = gl",
        "amplitudeBuffer = gl",
        "particles = [];",
        "quantumStates = [];",
        "i = 0; i < this",
        "theta = Math",
        "phi = Math",
        "r = Math",
        "x = r * Math",
        "y = r * Math",
        "z = r * Math",
        "positions = new Float32Array(this",
        "velocities = new Float32Array(this",
        "phases = new Float32Array(this",
        "amplitudes = new Float32Array(this",
        "i = 0; i < this",
        "p = this",
        "controls = {",
        "key => {",
        "control = controls[key];",
        "valueDisplay = document",
        "value = parseFloat(e",
        "frequency = value;",
        "textContent = value + ' Hz';",
        "a = value;",
        "textContent = value",
        "b = value;",
        "textContent = value",
        "c = value;",
        "textContent = value",
        "coherence = value;",
        "textContent = value",
        "interference = value;",
        "textContent = value",
        "particleCount = Math",
        "textContent = this",
        "cosmicScale = value;",
        "textContent = value",
        "isDragging = false;",
        "lastMouseX = 0;",
        "lastMouseY = 0;",
        "isDragging = true;",
        "lastMouseX = e",
        "lastMouseY = e",
        "deltaX = e",
        "deltaY = e",
        "lastMouseX = e",
        "lastMouseY = e",
        "isDragging = false;",
        "f = 1",
        "eyex = eye[0], eyey = eye[1], eyez = eye[2];",
        "upx = up[0], upy = up[1], upz = up[2];",
        "centerx = center[0], centery = center[1], centerz = center[2];",
        "len = 1 / Math",
        "len = Math",
        "len = 1 / len;",
        "s = Math",
        "c = Math",
        "s = Math",
        "c = Math",
        "currentTime = performance",
        "fps = this",
        "frameCount = 0;",
        "lastTime = currentTime;",
        "textContent = this",
        "textContent = this",
        "textContent = this",
        "bytesPerParticle = 4 * (3 + 3 + 1 + 1); // position + velocity + phase + amplitude",
        "totalBytes = this",
        "gpuMemory = Math",
        "textContent = this",
        "projectionMatrix = this",
        "viewMatrix = this",
        "aspect = canvas",
        "eye = [",
        "center = [0, 0, 0];",
        "up = [0, 1, 0];",
        "engine = new QuantumCymaticsEngine();",
        "indicator = document",
        "transform = `scale(${1 + Math"
      ],
      "hypotheses": []
    }
  },
  "rejection_stage": "01-INITIAL_SCREENING",
  "rejection_reason": "Initial screening pass rate 0.50 below 0.8 threshold",
  "destination": "09-REJECTED_ITEMS"
}